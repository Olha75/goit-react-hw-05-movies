{"version":3,"file":"static/js/530.bdfcbb59.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MovieDetails/Cast/cast.module.css?12bb","components/MovieDetails/Cast/Cast.jsx","page/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0254d5a3dced2c998ec5b5a910260705';\nconst BEARER_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMjU0ZDVhM2RjZWQyYzk5OGVjNWI1YTkxMDI2MDcwNSIsInN1YiI6IjY1YzIyNWZhZmM1ZjA2MDE2OGM1MWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1kpcuKWuntdsHi3r1Ec93wMxxOlDyIbChH1PpNf_-gY';\n// const accept= 'application/json';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: API_KEY, bearer: BEARER_TOKEN },\n});\n\nexport const getTrendingMovies = async () => {\n  return instance.get('/trending/movie/day', {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`,\n    },\n  });\n};\n\nexport const getTrendingByQuery = query => {\n  const options = {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`,\n    },\n    params: {\n      query: query,\n    },\n  };\n  return instance.get('/search/movie', options);\n};\n\nexport const getMovieById = movie_id => {\n  return instance.get(\n    `/movie/${movie_id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${BEARER_TOKEN}`,\n      },\n    }\n  );\n};\n\nexport const getCastById = movie_id => {\n  return instance.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`,\n    },\n  });\n};\n\nexport const getReviewsById = movie_id => {\n  return instance.get(\n    `/movie/${movie_id}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${BEARER_TOKEN}`,\n      },\n    }\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"cast_cast_list__6g1UJ\",\"cast_items\":\"cast_cast_items__-Xtx2\",\"img_cast\":\"cast_img_cast__Vz+Nh\",\"no_text_cast\":\"cast_no_text_cast__ZkkLF\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastById } from '../../../api/api';\nimport Loader from '../../Loader/Loader';\nimport myImage from '../../../image/default_no_actor_1.jpg';\nimport css from './cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const castResponse = await getCastById(movieId);\n        setCast(castResponse.data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const isCast = Boolean(cast.length);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      {isCast && cast.length > 0 ? (\n        <ul className={css.cast_list}>\n          {cast.map(({ id, original_name, profile_path }) => (\n            <li className={css.cast_items} key={id}>\n              <img\n                className={css.img_cast}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/original${profile_path}`\n                    : myImage\n                }\n                alt={'poster'}\n              />\n              <p>{original_name}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={css.no_text_cast}>Sorry, no cast available</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import Cast from '../../components/MovieDetails/Cast/Cast';\nimport { useParams } from 'react-router-dom';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  return <Cast movieId={movieId} />;\n};\n\nexport default CastPage;\n"],"names":["API_KEY","BEARER_TOKEN","instance","axios","baseURL","params","api_key","bearer","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","get","headers","Authorization","concat","stop","apply","arguments","getTrendingByQuery","query","options","getMovieById","movie_id","getCastById","getReviewsById","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchCast","castResponse","sent","data","t0","message","finish","isCast","Boolean","length","_jsxs","_Fragment","children","_jsx","Loader","className","css","map","_ref2","id","original_name","profile_path","src","myImage","alt","Cast"],"sourceRoot":""}