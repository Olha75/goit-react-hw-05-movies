{"version":3,"file":"static/js/875.07199021.chunk.js","mappings":"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","sources":["api/api.js","components/MovieDetails/Cast/Cast.jsx","page/CastPage/CastPage.jsx","components/MovieDetails/MovieDetails.jsx","page/MovieDetailsPage/MovieDetailsPage.jsx","components/MovieDetails/Reviews/Reviews.jsx","page/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0254d5a3dced2c998ec5b5a910260705';\nconst BEARER_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMjU0ZDVhM2RjZWQyYzk5OGVjNWI1YTkxMDI2MDcwNSIsInN1YiI6IjY1YzIyNWZhZmM1ZjA2MDE2OGM1MWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1kpcuKWuntdsHi3r1Ec93wMxxOlDyIbChH1PpNf_-gY';\n// const accept= 'application/json';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: API_KEY, bearer: BEARER_TOKEN },\n});\n\nexport const getTrendingMovies = async () => {\n  return instance.get('/trending/movie/day', {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`,\n    },\n  });\n};\n\nexport const getTrendingByQuery = query => {\n  const options = {\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`,\n    },\n    params: {\n      query: query,\n    },\n  };\n  return instance.get('/search/movie', options);\n};\n\nexport const getMovieById = movie_id => {\n  return instance.get(\n    `/movie/${movie_id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${BEARER_TOKEN}`,\n      },\n    }\n  );\n};\n\nexport const getCastById = movie_id => {\n  return instance.get(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      Authorization: `Bearer ${BEARER_TOKEN}`,\n    },\n  });\n};\n\nexport const getReviewsById = movie_id => {\n  return instance.get(\n    `/movie/${movie_id}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${BEARER_TOKEN}`,\n      },\n    }\n  );\n};\n// export const getCastById = movie_id => {\n//   return instance.get(\n//     `/movie/${movie_id}/credits`,\n//     {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     },\n//     {\n//       headers: {\n//         Authorization: `Bearer ${BEARER_TOKEN}`,\n//       },\n//     }\n//   );\n// };\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\n// export const fetchMovie = async name => {\n//   const { data } = await axios.get(`/name/${name}`);\n//   const movie = transformMovieData(data);\n//   return movie[0];\n// };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastById } from '../../../api/api';\nimport Loader from '../../Loader/Loader';\nimport myImage from '../../../image/default_no_actor.jpg';\n// import css from './cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const castResponse = await getCastById(movieId);\n        setCast(castResponse.data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const elements = cast.map(({ id, original_name, profile_path }) => (\n    <li key={id}>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/original${profile_path}`\n            : myImage\n        }\n        alt={'poster'}\n      />\n      <p>{original_name}</p>\n    </li>\n  ));\n\n  const isCast = Boolean(cast.length);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      {isCast && <ol>{elements}</ol>}\n    </>\n  );\n};\n\nexport default Cast;\n","import Cast from '../../components/MovieDetails/Cast/Cast';\nimport { useParams } from 'react-router-dom';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  return <Cast movieId={movieId} />;\n};\n\nexport default CastPage;\n","import React, { useState, useEffect, Suspense } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieById } from '../../api/api';\nimport Loader from '../Loader/Loader';\n// import Cast from './Cast/Cast';\nimport myImage from '../../image/default_no_actor.jpg';\n\n// import css from './movieDetails.module.css'\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setLoading(true);\n        const movieResponse = await getMovieById(movieId);\n        setMovie(movieResponse.data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const defaultImg = myImage;\n  const goBack = () => navigate(from);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <p>Error: {error} </p>}\n      <button onClick={goBack} type=\"button\">\n        Go back\n      </button>\n      {movie && (\n        <>\n          <h2>{movie.title}</h2>\n          <p>{movie.overview}</p>\n          {movie.backdrop_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n              alt=\"poster\"\n            />\n          ) : (\n            <img src={defaultImg} alt=\"poster\" />\n          )}\n          <div>\n            <h1>\n              {movie.title} ({new Date(movie.release_date).getFullYear()})\n            </h1>\n            <p>User score: {(movie.vote_average * 10).toFixed(0)}%</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {movie.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <Link to=\"credits\" state={{ from }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from }}>\n                  Reviews\n                </Link>\n              </li>\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useState } from 'react';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport CastPage from '../CastPage/CastPage';\nimport ReviewsPage from 'page/ReviewsPage/ReviewsPage';\n\nconst MovieDetailsPage = () => {\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  const handleCastClick = () => {\n    setShowCast(true);\n    setShowReviews(false);\n  };\n\n  const handleReviewsClick = () => {\n    setShowCast(false);\n    setShowReviews(true);\n  };\n\n  return (\n    <div>\n      <MovieDetails />\n      <div>\n        <button onClick={handleCastClick}>Cast</button>\n        <button onClick={handleReviewsClick}>Reviews</button>\n      </div>\n      {showCast && <CastPage />}\n      {showReviews && <ReviewsPage />}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from 'api/api';\nimport Loader from '../../Loader/Loader';\n// import css from './reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviewsById = async () => {\n      try {\n        setLoading(true);\n        const reviewsResponce = await getReviewsById(movieId);\n        setReviews(reviewsResponce.data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviewsById();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <ol>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ol>\n      ) : (\n        <p>No reviews available</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","// import css from './reviews-page.module.css';\nimport Reviews from '../../components/MovieDetails/Reviews/Reviews';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  return <Reviews movieId={movieId} />;\n};\n\nexport default ReviewsPage;\n"],"names":["API_KEY","BEARER_TOKEN","instance","axios","baseURL","params","api_key","bearer","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","get","headers","Authorization","concat","stop","apply","arguments","getTrendingByQuery","query","options","getMovieById","movie_id","getCastById","getReviewsById","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchCast","castResponse","sent","data","t0","message","finish","elements","map","_ref2","id","original_name","profile_path","_jsxs","children","_jsx","src","myImage","alt","isCast","Boolean","length","_Fragment","Loader","Cast","_location$state","movie","setMovie","from","useLocation","state","navigate","useNavigate","fetchMovieDetails","movieResponse","defaultImg","onClick","type","title","overview","backdrop_path","poster_path","Date","release_date","getFullYear","vote_average","toFixed","genres","genre","name","Link","to","Suspense","fallback","Outlet","showCast","setShowCast","showReviews","setShowReviews","MovieDetails","CastPage","ReviewsPage","reviews","setReviews","fetchReviewsById","reviewsResponce","results","author","content","Reviews"],"sourceRoot":""}